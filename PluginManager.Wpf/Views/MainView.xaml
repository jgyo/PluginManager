<UserControl x:Class="PluginManager.Wpf.Views.MainView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:vm="clr-namespace:PluginManager.Core.ViewModels;assembly=PluginManager.Core"
             xmlns:dt="clr-namespace:PluginManager.Core.ViewModels.DesignTime;assembly=PluginManager.Core"
             d:DataContext="{d:DesignInstance Type=vm:MainViewModel, IsDesignTimeCreatable=True}"
                  mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000" />
        <Style x:Key="HidableCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsHidden}" Value="True">
                    <Setter Property="Background" Value="#dd0" />
                    <Setter Property="Foreground" Value="#003300" />
                    <Setter Property="FontStyle" Value="Italic" />
                    <Setter Property="FontWeight" Value="Light" />
                </DataTrigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true" />
                        <Condition Property="Selector.IsSelectionActive" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True" />
                            <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SetupButton" TargetType="{x:Type Button}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="Blue" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="Transparent" Padding="0" BorderThickness="0 0 0 1.4" Background="{TemplateBinding Background}" TextBlock.Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="TextBlock.FontWeight" TargetName="border" Value="Bold" />
                                <Setter Property="BorderBrush" TargetName="border" Value="Blue" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Foreground" Value="Purple" />
                                <Setter Property="BorderBrush" TargetName="border" Value="Purple" />
                                <Setter Property="BorderThickness" TargetName="border" Value="0 0 0 1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <TabControl>
        <TabItem Header="Folders">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="83*" />
                    <ColumnDefinition Width="711*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Text="Installed (or Hidden) MSFS Folder Folders" FontSize="18" HorizontalAlignment="Left" Margin="8,8,8,8" Grid.ColumnSpan="2" />
                <Button Style="{DynamicResource SetupButton}" Content="Setup" Grid.Column="1"
                ToolTip="Setup program resources."
                Command="{Binding OpenSetupCommand}"
                HorizontalAlignment="Right" Margin="8" />
                <DataGrid CellStyle="{DynamicResource HidableCellStyle}"
                  Name="folderControl"
                  Grid.Row="1" Margin="8,8,8,8"
                  ItemsSource="{Binding FolderCollection}"
                  AutoGenerateColumns="False" CanUserAddRows="False" Grid.ColumnSpan="2">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Id" Binding="{Binding FolderId}" IsReadOnly="True" />
                        <DataGridTemplateColumn Header="Hidden">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <TextBlock x:Name="TrueBox" Text="Yes" FontWeight="Bold" Foreground="Red" HorizontalAlignment="Center" />
                                        <TextBlock x:Name="FalseBox" Text="No" HorizontalAlignment="Center" Visibility="Hidden" />
                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsHidden}" Value="True">
                                            <Setter TargetName="TrueBox" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="FalseBox" Property="Visibility" Value="Hidden" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsHidden}" Value="False">
                                            <Setter TargetName="TrueBox" Property="Visibility" Value="Hidden" />
                                            <Setter TargetName="FalseBox" Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Folder Name" Binding="{Binding FolderName}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Install Date" Binding="{Binding InstallDate}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Package Id" Binding="{Binding PackageId}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Product Name" Binding="{Binding Package.AddonName}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Version" Binding="{Binding Package.Version}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Zip File Name" Binding="{Binding Package.Filename}" IsReadOnly="True" />
                    </DataGrid.Columns>
                </DataGrid>
                <GroupBox IsEnabled="{Binding AreFoldersSelected}" Grid.Row="2" Header="Selected Items Options" Margin="8,8,0,8" BorderBrush ="{StaticResource GroupPanel.Static.BorderBrush}" HorizontalAlignment="Left" Grid.ColumnSpan="2">
                    <Grid HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Button Command="{Binding DeleteSelectedFoldersCommand}" Content="Delete" Margin="4" Width="100"
                        ToolTip="Delete the selected folders." />
                        <Button Command="{Binding HideSelectedFoldersCommand}" Content="Hide" Grid.Column="1" Margin="4" Width="100"
                        ToolTip="Hide folders in selected items." />
                        <Button Command="{Binding RestoreSelectedFoldersCommand}" Content="Restore" Grid.Column="2" Margin="4" Width="100"
                        ToolTip="Restore hidden folders in selected items." />
                        <Button Command="{Binding EditSelectedFolderCommand}" IsEnabled="{Binding IsOneFolderSelected}" Content="Edit" Grid.Column="3" Margin="4" Width="100"
                        ToolTip="Edit the selected item." />
                    </Grid>
                </GroupBox>
                <Button Command="{Binding SynchronizeDataBaseCommand}" Padding="16 8" Margin="8" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right" Content="Synchronize"
                ToolTip="Synchronize database with existing install folders." />
            </Grid>
        </TabItem>
        <TabItem Header="Packages">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="4*" />
                    <RowDefinition Height="3*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Text="Zip File Records" FontSize="18" Margin="8,8,8,8" Grid.ColumnSpan="2" HorizontalAlignment="Left" />
                <Button Style="{DynamicResource SetupButton}" Content="Setup" Grid.Column="1"
                ToolTip="Setup program resources."
                Command="{Binding OpenSetupCommand}"
                HorizontalAlignment="Right" Margin="8" />
                <DataGrid
                  Name="zipfilesControl"
                  Grid.Row="1" Margin="8,8,8,8"
                  ItemsSource="{Binding ZipFileFolderCollection}"
                  AutoGenerateColumns="False" CanUserAddRows="False" Grid.ColumnSpan="2">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Id" Binding="{Binding PackageId}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Package Name" Binding="{Binding Filename}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Product Name" Binding="{Binding AddonName}" IsReadOnly="False" />
                        <DataGridTextColumn Header="Version" Binding="{Binding Version}" IsReadOnly="False" />
                        <DataGridTextColumn Header="File Date" Binding="{Binding FileDate}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Added Date" Binding="{Binding AddedDate}" IsReadOnly="True" />
                        <DataGridTextColumn Header="File Path" Binding="{Binding FilePath}" IsReadOnly="True" />
                    </DataGrid.Columns>
                </DataGrid>
                <GridSplitter Grid.Row="2" Grid.ColumnSpan="2" Height="5" Margin="8 0" Background="LightGray" VerticalAlignment="Top" HorizontalAlignment="Stretch" />
                <Grid Grid.Row="2" Grid.ColumnSpan="2" Margin="8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock Text="Selected Package Folders" Margin="0 0 0 8" />
                    <DataGrid
                        CanUserDeleteRows="False"
                        CanUserAddRows="False"
                        Grid.Row="1"
                        AutoGenerateColumns="False"
                        IsReadOnly="True"
                        ItemsSource="{Binding Path=SelectedZipFile.Folders}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding FolderId}" />
                        <DataGridTemplateColumn Header="Hidden">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <TextBlock x:Name="TrueBox" Text="Yes" FontWeight="Bold" Foreground="Red" HorizontalAlignment="Center" />
                                        <TextBlock x:Name="FalseBox" Text="No" HorizontalAlignment="Center" Visibility="Hidden" />
                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsHidden}" Value="True">
                                            <Setter TargetName="TrueBox" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="FalseBox" Property="Visibility" Value="Hidden" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsHidden}" Value="False">
                                            <Setter TargetName="TrueBox" Property="Visibility" Value="Hidden" />
                                            <Setter TargetName="FalseBox" Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Folder Name" Binding="{Binding FolderName}" />
                            <DataGridTextColumn Header="Install Date" Binding="{Binding InstallDate}" />
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
                <GroupBox IsEnabled="{Binding AreZipFilesSelected}" Grid.Row="4" Header="Selected Zip File Record Options" Margin="8,8,0,8" BorderBrush ="{StaticResource GroupPanel.Static.BorderBrush}" HorizontalAlignment="Left" Grid.ColumnSpan="2">
                    <Grid HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Button Content="Install" Grid.Column="0" Margin="4" Width="100"
                                IsEnabled="{Binding IsOneZipFileSelected}"
                                Command="{Binding }"
                        ToolTip="Install the selected zip file." />
                        <Button  Content="Delete" Grid.Column="1" Margin="4" Width="100"
                                 IsEnabled="{Binding AreZipFilesSelected}"
                        ToolTip="Delete the selected zip file." />
                        <Button  Content="Edit" Grid.Column="2" Margin="4" Width="100"
                                 IsEnabled="{Binding IsOneZipFileSelected}"
                                 Command="{Binding EditSelectedZipFileCommand}"
                        ToolTip="Edit the selected zip file record." />
                    </Grid>
                </GroupBox>
                    <Button Command="{Binding AddNewZipFileCommand}" Padding="16 8" Margin="0 0 8 0" Grid.Row="4" Grid.Column="0" HorizontalAlignment="Right" Content="Add New"
                ToolTip="Browse to and add a new zip file." />
            </Grid>
        </TabItem>
    </TabControl>
</UserControl>